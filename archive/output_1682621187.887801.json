{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "print_time = '21:44:52.549664', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step8", "rerun": "0"}, "1": {"status": "ERROR", "message": "print_time = '21:44:52.595870', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step9", "rerun": "0"}}, "suite_name": "test_7z_negative.py"}, "1": {"suite_name": "test_7z_positive.py", "tests": {"0": {"status": "ERROR", "message": "print_time = '21:44:52.611101', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step1", "rerun": "0"}, "1": {"status": "ERROR", "message": "print_time = '21:44:52.687243', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step2", "rerun": "0"}, "2": {"status": "ERROR", "message": "print_time = '21:44:52.756208', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step3", "rerun": "0"}, "3": {"status": "ERROR", "message": "print_time = '21:44:52.771788', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step4", "rerun": "0"}, "4": {"status": "ERROR", "message": "print_time = '21:44:52.848873', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step5", "rerun": "0"}, "5": {"status": "ERROR", "message": "print_time = '21:44:52.916780', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step6", "rerun": "0"}, "6": {"status": "ERROR", "message": "print_time = '21:44:53.000954', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step7", "rerun": "0"}, "7": {"status": "ERROR", "message": "print_time = '21:44:53.016397', create_file_txt = True\n\n    @pytest.fixture()\n    def write_stat_file(print_time, create_file_txt):\n        if create_file_txt:\n            with open(data['filename'], 'w', encoding='utf-8') as f:\n>               f.write(print_time, data['count'], data['size_of_file'])\nE               TypeError: TextIOWrapper.write() takes exactly one argument (3 given)\n\nconftest.py:91: TypeError\n", "test_name": "test_step10", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 8}}}}, "date": "April 27, 2023", "start_time": 1682621093.0162272, "total_suite": 2, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "10", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "10"}